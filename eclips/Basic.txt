package demo;

import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;

import static io.restassured.RestAssured.*;
import static org.hamcrest.Matchers.*;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import org.testng.Assert;

import file.Payload;
import file.ReUsableMethod;

public class Basic {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		// Validating if addPlace API is working or not
		// given -> All input details
		// when  -> Submitting the API
		// then  -> Validate the response
		
		RestAssured.baseURI="https://rahulshettyacademy.com";
		String response = given().log().all().queryParam("key", "qaclick123")
				.headers("Content-Type","application/json")
		.body(new String(Files.readAllBytes( Paths.get("C:\\Users\\draghava\\OneDrive - Capgemini\\Documents\\All Programs\\Notes\\addPlace.json"))))
		.when().post("maps/api/place/add/json")
		.then().log().all().assertThat().statusCode(200)
		.body("scope",equalTo( "APP"))
		.header("Server", "Apache/2.4.52 (Ubuntu)")
		.header("Connection", "Keep-Alive")
		.extract().response().asString();
		
		System.out.println(response);
		JsonPath js = new JsonPath(response);
		String place_id = js.getString("place_id");
		System.out.println(place_id);

		// Update the place with new address
		String newAddress = "Going to the home";
		given().log().all().queryParam("key", "qaclick123").
		header("Content-Type", "application/json")
		.body("{\r\n"
				+ "\"place_id\":\""+place_id+"\",\r\n"
				+ "\"address\":\""+newAddress+"\",\r\n"
				+ "\"key\":\"qaclick123\"\r\n"
				+ "}").when().put("maps/api/place/update/json")
		.then().assertThat().log().all().statusCode(200)
		.body("msg",equalTo("Address successfully updated"));
		
		// get updated place
		String getResponce = given().log().all().queryParam("key", "qaclick123")
		.queryParam("place_id", place_id)
		.when().get("maps/api/place/get/json")
		.then().assertThat().log().all().statusCode(200).extract().response().asString();
		
		JsonPath js1 = ReUsableMethod.rawToJson(getResponce);
		String actualAddress = js1.getString("address");
		System.out.println(actualAddress);
		
		Assert.assertEquals(actualAddress, newAddress);
		
	}

}
